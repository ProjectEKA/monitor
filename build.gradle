plugins {
	id 'org.springframework.boot' version '2.3.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id "org.sonarqube" version "2.8"
	id 'jacoco'
}
group = 'in.projecteka'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

task bootRunLocal {
	bootRun.configure {
		systemProperty "spring.profiles.active", 'local'
	}
}

bootRunLocal.finalizedBy bootRun

dependencies {
	compileOnly 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	compile group: 'io.prometheus', name: 'simpleclient', version: '0.9.0'
	compile group: 'io.prometheus', name: 'simpleclient_common', version: '0.9.0'
	implementation 'io.vertx:vertx-pg-client:3.9.0'
}

test {
	useJUnitPlatform()
}

sonarqube {
	properties {
		property "sonar.projectKey", "ProjectEKA_gateway"
		property "sonar.organization", "projecteka"
		property "sonar.host.url", "https://sonarcloud.io"
		property "sonar.login", "dd5db84dbf8f6dbd393291c26fe038ab54f00072"

		property 'sonar.coverage.jacoco.xmlReportPaths', 'build/reports/jacoco/test/jacocoTestReport.xml'
	}
}

jacocoTestReport {
	additionalSourceDirs.from = files(sourceSets.main.allJava.srcDirs)
	reports {
		html.enabled true
		xml.enabled true
		csv.enabled false
		html.destination file("build/reports/jacoco/html")
	}
	executionData.from = files('build/jacoco/test.exec')
}